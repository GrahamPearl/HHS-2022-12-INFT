unit student;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, Grids, DBGrids, ExtCtrls, oop, jpeg, Mask, DBCtrls;

type
  TfrmStudent = class(TForm)
    BitBtn1: TBitBtn;
    BitBtn2: TBitBtn;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    edtEmail: TEdit;
    Label5: TLabel;
    Edit1: TEdit;
    Label6: TLabel;
    cboGender: TComboBox;
    picture: TImage;
    btnBrowse: TButton;
    DBGrid1: TDBGrid;
    Label7: TLabel;
    Image1: TImage;
    edtAdmin: TEdit;
    edtSurname: TEdit;
    edtFirstName: TEdit;
    procedure FormActivate(Sender: TObject);
    procedure BitBtn2Click(Sender: TObject);
    procedure edtAdminEnter(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmStudent: TfrmStudent;
  aValidator : TValidator;
  aStudent : TStudent;

implementation
uses DM2022;
{$R *.dfm}

procedure TfrmStudent.BitBtn2Click(Sender: TObject);
begin
// Check that the validator is not NULL
if Assigned(aValidator) then
begin
 // Check that the ADMIN No contains only digits - else show error messages
  if not aValidator.checkOnlyDigits(edtAdmin.Text)
  then showMessage('Error - unexpected characters encountered');
end
else showMessage('Validator disabled');
end;

procedure TfrmStudent.edtAdminEnter(Sender: TObject);
begin
 if (Sender as TEdit).Text = ' - Please Enter -'
 then (Sender as TEdit).Clear;
end;

procedure TfrmStudent.FormActivate(Sender: TObject);
begin
 aValidator := TValidator.Create;
end;

end.
